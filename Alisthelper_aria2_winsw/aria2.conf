#################

#

# The comment at the beginning of the well symbol is the content of the comment, the option has a corresponding comment description, according to the need to modify

# # The commented options are default values, it is recommended to remove the comments when you need to modify them.

# This configuration references part of the 'Aria2 Perfect Configuration' https://github.com/P3TERX/aria2.conf

#

#################

 

### File save settings ###

 

### Download directory, you can use absolute path or relative path, make sure to change it to your own download path.

dir=D:\t

 

# Path to save the log file

log=D:\Program_Files\AlistHelper2\Aria2.log

 

# Enable disk caching, 0 to disable caching, default: 16M, maximum 64M

# The role of disk cache is to temporarily store the downloaded data blocks in memory, and then centrally write them to the hard disk to reduce disk I/O, improve read/write performance, and extend the life of the hard disk.

# It is recommended to increase the value if there is enough free memory, but do not exceed the size of the remaining free memory space.

# This value only determines the upper limit, the actual memory usage depends on other factors such as network speed, bandwidth and device performance.

disk-cache=32M

 

# Preallocated files can help mechanical hard disks effectively reduce disk fragmentation, improve disk read/write performance, and extend disk life.

# Default: prealloc, optional: none, prealloc, trunc, falloc

# prealloc allocation is slow, falloc and trunc require file system and kernel support, not recommended.

# btrfs, xfs, NTFS (MinGW compiled versions only) file systems are recommended to be set to falloc.

# trunc is recommended for Ext3/4 (with extended support).

# SSDs do not need to be preallocated, only none is recommended, as this may result in double the file size being written, thus affecting the lifetime.

# MacOS requires this to be commented out

file-allocation=none

 

# Limit file preallocation size

# Do not preallocate space for files smaller than this value, in K or M. Default: 5M.

# no-file-allocation-limit=32M

 

# Continue the transfer at breakpoints.

continue=true

 

# Always try to continue the download, if you can't continue the download, then terminate the download, default: true

always-resume=true

 

# Value of URI that does not support intermittent downloads, effective when always-resume=false.

# If this value is reached, the download will start from the beginning, if the value is 0, the download will start from the beginning only if all URIs don't support intermittent transfers.

# max-resume-failure-tries=0

 

# Get server file time, default: false

remote-time=true

 

### Progress save related settings ###

 

### Read download tasks from session file.

input-file=D:\Program_Files\AlistHelper2\aria2.session

 

# Session file save path

# Aria2 saves `error/incomplete` downloads to the session file when it exits, or at specified intervals.

save-session=D:\Program_Files\AlistHelper2\aria2.session

 

# The interval (in seconds) to save the session after a task state change, 0 is only saved when the process exits normally, default:0

# To save the task state in time and prevent the task from being lost, it is recommended to set this value to 1 only.

save-session-interval=1

 

# The interval (in seconds) between automatically saving the task progress to the control file (*.aria2).

# 0 for saving only when the process exits normally, default: 60

# This value also indirectly affects how often cached data is written to disk from memory.

# Increase the interval if you want to reduce disk IOPS (reads and writes per second)

# Decrease the interval if you want to save as much download progress as possible in case of an unexpected abnormal exit.

# Lower the interval if you want to save as much download progress as possible in case of an unplanned exit: process crash, system crash, SIGKILL signal, device power failure, etc.

auto-save-interval=20

 

# Force save, save information to session file even if the task has been completed, default: false

# Enable to keep the .aria2 file after the task is completed, if the file is removed and the task exists, it will be re-downloaded after reboot.

# When closed, the list of completed tasks will be cleared after reboot.

force-save=false

 

### Download connection related ###

 

## File not found retry count, default: 0 (disabled)

### The number of retries will be logged, so you need to set the max-tries option as well.

max-file-not-found=5

 

# Maximum number of tries, 0 means unlimited, default: 5.

max-tries=5

 

# retry-wait time in seconds, default:0 (disabled)

retry-wait=15

 

# Connection timeout in seconds. Default:60

connect-timeout=30

 

# Connection timeout in seconds. Default: 60

timeout=30

 

# Maximum number of simultaneous download tasks, can be modified at runtime, default:5

#max-concurrent-downloads=5

 

# Maximum number of connected threads on the same server, can be specified when adding, default:1

# Maximum number of threads on the same server, can be specified when adding, default: 1 # Maximum value is 16, and is limited to the maximum number of threads connected to a single task split set value

max-connection-per-server=16

 

# Maximum number of threads for a single task, can be specified when adding, default:5

split=8

 

# Minimum file split size, can be specified when adding, value range 1M -1024M, default: 20M.

# For example, if this value is 10M, when the file is 20MB, it will be split into two and use two sources to download, when the file is 15MB, it will only use one source to download.

# Theoretically, the smaller the value, the more download segments will be used, the more actual threads will be available, and the faster the download will be, but this is limited by the policy of the download server.

min-split-size=8M

 

# HTTP/FTP download split size, all splits must be a multiple of this value

# Minimum value is 1M (1K for enhanced version), default: 1M.

piece-length=1M

 

# Allow slice size to change, default: false

# false: download will be aborted if the piece size is different from that in the control file

# true: continue to download if part of the download progress is lost

allow-piece-length-change=true

 

# Global maximum download speed limit, can be changed at runtime, default: 0 (unlimited).

max-overall-download-limit=0

 

# Global maximum upload speed limit, can be changed at runtime, default: 0 (no limit).

# Setting too low may affect BT download speed.

max-overall-upload-limit=64K

 

# Single-task download speed limit, default: 0 (no limit)

max-download-limit=0

 

# Single-task upload speed limit, default: 0 (no limit)

max-upload-limit=32K

 

# Disable IPv6, default:false

disable-ipv6=false

 

# Reuse URIs, default: true

reuse-uri=false

 

# Allow overwriting, re-download from scratch when the associated control file (.aria2) does not exist, default: false

allow-overwrite=false

 

# File is renamed automatically, this option is only valid for HTTP(S)/FTP downloads

# New filenames should have a dot and a number (1..9999) after the name and before the extension, default: true

auto-file-renaming=true

 

### Client masquerade ###

 

### Customize the User Agent

user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 Edg/93.0.961.47

 

### RPC related settings ###

 

# Enable JSON-RPC/XML-RPC server, default: false

enable-rpc=true

 

# Accept all remote requests, default: false

rpc-allow-origin-all=true

 

# Allow external access, default: false

rpc-listen-all=true

 

# Event polling methods

# Optional: epoll, kqueue, port, poll, select, defaults vary by system.

# event-poll=select

 

# RPC listening port, default: 6800.

rpc-listen-port=6800

 

# Maximum RPC request size

rpc-max-request-size=10M

 

# RPC authorization key to be set in place of the --rpc-user and --rpc-passwd options

rpc-secret=abcsoeasy123

 

# Whether to enable SSL/TLS encryption for RPC service, default: false

# If encryption is enabled, you must use https or wss protocol to connect.

# Not recommended, use web server reverse proxy.

# Enable encryption, you must use https or wss protocol to connect # It is not recommended to use web server reverse proxy.

# rpc-secure=true

 

# Certificate file to enable SSL/TLS encryption for RPC services.

# When using the PEM format, you must specify the private key with --rpc-private-key

#rpc-certificate=/path/to/certificate.pem

 

# Private key file when enabling SSL/TLS encryption in the RPC service

#rpc-private-key=/path/to/certificate.key

 

### BT/PT download related ###

 

# BT listening port (TCP), default: 6881-6999

# Devices with direct access to the external network, such as VPS, must be configured with firewall and security group policy to allow inbound traffic on this port.

# For devices in intranet environments, such as NAS, in addition to firewall settings, you must also set up the router to forward external ports to this port.

listen-port=51413

 

# DHT network and UDP tracker listen-port (UDP), default:6881-6999

# Use the same port as the BT listen port to configure firewall and port forwarding policies, as the protocol is different.

dht-listen-port=51413

 

# Download the seed file (.torrent) automatically start download, default:true, optional as follows

# true: save the seed file

# false: download seed file only

# mem: save seed in memory

follow-torrent=true

 

# Maximum number of connections for BT download (single task), can be changed at runtime.

# 0 for no limit, default: 55

# Ideally the more connections you have the faster the download will be, but in reality only a few connected seeders will upload faster, the rest will upload slower or not at all.

# If there is no limit, when downloading very popular seeds or a very large number of tasks, the process may crash or the network may be blocked due to too many connections.

# Process crash: if the device CPU performance is average, too many connections lead to high CPU utilization, due to insufficient resources, the Aria2 process will be forced to be terminated.

# Network blocking: in an intranet environment, even if the download does not take up all the bandwidth, it will cause other devices to be unable to access the Internet normally.

bt-max-peers=64

 

# Enable DHT, PT needs to be disabled, default:true

enable-dht=false

 

# Enable IPv6 DHT function, PT needs to be disabled.

# enable-dht6=false

 

# Local node lookup, PT needs to disable, default:false

#bt-enable-lpd=false

 

# Seed exchange, PT needs to be disabled, default:true

enable-peer-exchange=false


BT download desired speed value (single task), can be modified at runtime




# In K or M, default: 50K.




# Temporarily increase the number of connections when the download speed is lower than this value to get a faster download speed, but only if there are more seeders available for connection.




# There is no limit to the number of connections that can be temporarily increased, but it will not increase indefinitely as if there is no limit, it will be dynamically adjusted according to the algorithm.


bt-request-peer-speed-limit=5M


 


# Client masquerading, PT requires


peer-id-prefix=-TR2770-


user-agent=Transmission/2.77


 


# Minimum sharing rate. Stop seeding when the seed sharing rate reaches the value set by this option.


# 0 for always seeding, default: 1.0


# It is highly recommended to set this option to a value greater than or equal to 1.0.


seed-ratio=1.0


 


# Minimum seeding time (minutes)


# Set to 0 to stop seeding after the BT job has finished downloading.


seed-time=30


 


# Check file hash before seeding, default: true


bt-hash-check-seed=true


 


# Force the session to be saved even if the job has finished, default:false


# Newer versions turned on will keep .aria2 files even after the task is completed


# force-save=false


 


# Continue previous BT jobs without checking them again, default: false


bt-seed-unverified=true


 


# Save magnet link metadata as seed file (.torrent file), default: false


bt-save-metadata=true


 


# BT tracker server connection timeout in seconds. Default: 60


# After a connection is established, this option is invalid and the value of the bt-tracker-timeout option will be used


bt-tracker-connect-timeout=45


 


# BT tracker server timeout in seconds. Default: 60


bt-tracker-timeout=45


 


# Save seed files (.torrent) uploaded via WebUI (RPC), default: true


# All options related to saving seed files are recommended to be enabled, not saving seed files risk losing the task


# Customizing the temporary download directory via RPC may not save the seed files


rpc-save-upload-metadata=true


 


# BT forced encryption, default: false


# Enable to reject old BT handshake protocol and use only obfuscated handshake and encryption.


# Enable to reject old BT handshake protocols and use only obfuscated handshake and encryption.


# This option is a shortcut to the next two options (bt-require-crypto=true, bt-min-crypto-level=arc4), but does not modify their values.


bt-force-encryption=true


 


# BT encryption on demand, default: false


# Enable to reject connections with the old BitTorrent handshake protocol (\19BitTorrent protocol), always use the obfuscation handshake.


#bt-require-crypto=true


 


# bt-min-crypto=true Minimum encryption level for BT, options: plain (plaintext), arc4 (encrypted), default: plain


#bt-min-crypto-level=arc4


 


### Advanced options ###


 


### Enable asynchronous DNS function, default: true


async-dns=true


 


# Specify a list of asynchronous DNS servers, or read from /etc/resolv.conf if not specified.


async-dns-server=119.29.29.29,223.5.5.5,1.1.1.1,8.8.8.8,114.114.114.114


 


# Specify a single network interface, possible values: interface, IP address, hostname


# If the interface has multiple IP addresses, it is recommended to specify the IP address.


# Specifying a network interface is known to affect functional scenarios that rely on local RPC connections, i.e., you cannot communicate with the Aria2 server via localhost and 127.0.0.1.


#interface=


 


# Specifies multiple network interfaces, separated by a comma (,).


# This is ignored when the interface option is used.


#multiple-interface=

